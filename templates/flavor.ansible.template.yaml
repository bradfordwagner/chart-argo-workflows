apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: flavor-ansible-template
  labels:
    {{- include "labels" . | nindent 4 }}
spec:
  entrypoint: main
  templates:
  - name: branches
    {{- include "ansible.parameters" . | nindent 4 }}
    steps:
    - - name: ansible-playbook
        template: ansible-playbook-branches
        withParam: "{{`{{inputs.parameters.ansible_args}}`}}"
        arguments:
          parameters:
            {{- include "parameter.from.input" "git_repo"        | nindent 12 }}
            {{- include "parameter.from.input" "git_version"     | nindent 12 }}
            - name: image
              value: "{{`{{inputs.parameters.upstream_repo}}:{{inputs.parameters.upstream_tag}}-{{inputs.parameters.platform}}-{{=sprig.replace('/', '_', item.platform)}}`}}"
            - name: ansible_extra_args
              value: "{{`{{item.ansible_extra_args}}`}}"

  - name: ansible-playbook-branches
    inputs:
      parameters:
      - name: git_repo
      - name: git_version
      - name: ansible_extra_args
      - name: image
      artifacts:
      - name: source-repo
        path: /src
        git:
          repo: "{{`{{ inputs.parameters.git_repo }}`}}"
          revision: "{{`{{ inputs.parameters.git_version }}`}}"
    container:
      workingDir: /src
      image: "{{`{{ inputs.parameters.image }}`}}"
      command: [/bin/sh, -lc]
      args:
        - |
          # shame on me i shouldn't copy and paste this
          echo image={{`{{ inputs.parameters.image }}`}}
          ansible-galaxy install -r requirements.yml
          ansible-playbook playbook.yml -e '{{`{{ inputs.parameters.ansible_extra_args }}`}}'
          exit_code=$?
          exit ${exit_code}


{{ range $k, $v := omit .Values.flavors.custom_dockerfile "branches" }}
  - name: {{ $k }}
    {{- include "ansible.parameters" . | nindent 4 }}
    dag:
      tasks:
      - name: build-image
        templateRef:
          name: kaniko-template
          template: main
        withParam: "{{`{{inputs.parameters.ansible_args}}`}}"
        arguments:
          parameters:
          - name: git_repo
            value: "{{`{{ inputs.parameters.git_repo }}`}}"
          - name: git_version
            value: "{{`{{ inputs.parameters.git_version }}`}}"
          - name: repo_name
            value: '{{`{{ inputs.parameters.repo_name }}`}}'
          - name: tag
            {{ if eq $k "tags" }}
            value: "{{`{{ inputs.parameters.git_version }}`}}{{`{{inputs.parameters.tag_suffix}}`}}-{{`{{=sprig.replace('/','_',item.platform)}}`}}"
            {{ else }}
            value: "latest{{`{{inputs.parameters.tag_suffix}}`}}-{{`{{=sprig.replace('/','_',item.platform)}}`}}"
            {{- end }}
          - name: push
            value: {{ $v.push | quote }}
          - name: runtime_platform
            value: "{{`{{item.platform}}`}}"
          - name: dockerfile
            value: |
              FROM --platform={{`{{item.platform}}`}} {{`{{ inputs.parameters.upstream_repo }}`}}:{{`{{ inputs.parameters.upstream_tag }}`}}-{{`{{ inputs.parameters.platform}}`}} as builder
              COPY . .
              RUN ansible-galaxy install -r requirements.yml
              RUN ansible-playbook playbook.yml -e '{{`{{ item.ansible_extra_args }}`}}'

      {{- if eq $k "tags" }}
      {{- $combine_args := dict "template" $k "depends" "build-image" "platform_json" `{{ inputs.parameters.ansible_args }}` "platform_json_pluck" "platform" }}
      {{- include "combine-manifest" $combine_args | nindent 6 }}

      {{- end }}
{{- end }}
