apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: kaniko-template
  labels:
    {{- include "labels" . | nindent 4 }}
spec:
  entrypoint: main
  templates:
  - name: main
    metadata:
      annotations:
        # TODO: can this be paramaterized based on inputs?
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: go_releaser_reader
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/agent-pre-populate: "true"
        vault.hashicorp.com/agent-pre-populate-only: "true"
        vault.hashicorp.com/agent-inject-secret-go-releaser: secret/data/go_releaser
        vault.hashicorp.com/agent-inject-template-go-releaser: |
          {{`{{- with secret "secret/go_releaser" -}}`}}
            export GITHUB_TOKEN={{`{{ .Data.data.GITHUB_TOKEN }}`}}
          {{`{{- end }}`}}
    inputs:
      parameters:
      - name: git_repo
      - name: git_version
      - name: repo_name
        value: stub # not a real repo
      - name: tag
        value: latest
      - name: dockerfile
      - name: runtime_platform
      - name: push
        value: "--no-push" # empty if we want to push
      artifacts:
      - name: git
        path: /tmp/src
        git:
          repo: '{{`{{ inputs.parameters.git_repo }}`}}'
          revision: '{{`{{ inputs.parameters.git_version }}`}}'
      - name: dockerfile
        path: /tmp/Dockerfile
        raw:
          data: |
            # source: kaniko build template
            {{`{{inputs.parameters.dockerfile}}`}}
            RUN rm -rf /vault/secrets/* # do not allow secrets to leak
    volumes:
    - name: quay
      csi:
        driver: 'secrets-store.csi.k8s.io'
        readOnly: true
        volumeAttributes:
          secretProviderClass: quay
    container:
      image: {{ .Values.kaniko.image }}
      command: [/kaniko/executor]
      args: ["--dockerfile=/tmp/Dockerfile",
             "--context=dir:///tmp/src",
             "--snapshotMode=redo",
             "--use-new-run",
             "--destination={{`{{inputs.parameters.repo_name}}`}}:{{`{{inputs.parameters.tag}}`}}",
             "--customPlatform={{`{{inputs.parameters.runtime_platform}}`}}",
             "{{`{{inputs.parameters.push}}`}}"
            ]
      volumeMounts:
        - name: quay
          mountPath: /kaniko/.docker
