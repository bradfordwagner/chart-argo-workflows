# to get list of architectures from an image:
# manifest-tool inspect debian:buster --raw | jq '.[] | "\(.Platform.os)/\(.Platform.architecture)"' -r
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: manifest-template
  labels:
    {{- include "labels" . | nindent 4 }}
spec:
  entrypoint: main
  templates:
  - name: main
    inputs:
      parameters:
      - name: repo_name
      # base tag to use ie
      # tag-upstream_upstreamtag
      - name: tag
      # comma separated list of OS/ARCH to stich together - this is usually auto converted by argo
      - name: runtime_platforms_json
      - name: runtime_platforms_json_pluck
    steps:
    - - name: parse-platforms
        template: parse-platforms
        arguments:
          parameters:
            {{- include "parameter.from.input" "runtime_platforms_json"       | nindent 12 }}
            {{- include "parameter.from.input" "runtime_platforms_json_pluck" | nindent 12 }}

    - - name: push-manifest
        template: push-manifest
        arguments:
          parameters:
            {{- include "parameter.from.input" "repo_name" | nindent 12 }}
            {{- include "parameter.from.input" "tag"       | nindent 12 }}
            - name: runtime_platforms_json
              value: "{{`{{ steps.parse-platforms.outputs.result }}`}}"

  - name: parse-platforms
    inputs:
      parameters:
      - name: runtime_platforms_json
      - name: runtime_platforms_json_pluck
    container:
      image: {{ .Values.flavors.terraform.image }}
      command: [/bin/sh, -lc]
      args:
        - |
          echo {{`{{=sprig.toJson(inputs.parameters.runtime_platforms_json)}}`}} \
            | jq -rc '[.[] | .{{`{{ inputs.parameters.runtime_platforms_json_pluck }}`}}]'

  - name: push-manifest
    volumes:
      - name: quay
        csi:
          driver: 'secrets-store.csi.k8s.io'
          readOnly: true
          volumeAttributes:
            secretProviderClass: quay
    inputs:
      parameters:
      - name: repo_name
      - name: tag
      - name: runtime_platforms_json
    container:
      image: {{ .Values.manifest.image }}
      command: [/manifest-tool]
      args: [
            --docker-cfg,
            '/kaniko/.docker',
            push,
            from-args,
            "--platforms",
            "{{`{{=sprig.join(',', sprig.fromJson(inputs.parameters.runtime_platforms_json))}}`}}",
            "--template",
            "{{`{{inputs.parameters.repo_name }}`}}:{{`{{inputs.parameters.tag}}`}}-OS_ARCH",
            "--target",
            "{{`{{inputs.parameters.repo_name}}`}}:{{`{{inputs.parameters.tag}}`}}"
            ]
      volumeMounts:
        - name: quay
          mountPath: /kaniko/.docker
